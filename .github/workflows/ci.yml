name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linters
        run: |
          ruff check .
          black --check .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    services:
      mysql-db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3307:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      MYSQL_DATABASE: test_query_lab_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
      DB_HOST: 127.0.0.1   # Use localhost for host-mapped port
      DB_PORT: 3307

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update && sudo apt-get install -y default-mysql-client

      - name: Wait for MySQL service to be ready
        run: |
          echo "Waiting for MySQL on port 3307..."
          until mysqladmin ping -h 127.0.0.1 -P 3307 --silent; do
            echo "MySQL is unavailable - sleeping"
            sleep 1
          done
          echo "MySQL is up - executing command"

      - name: Run tests
        run: pytest tests/